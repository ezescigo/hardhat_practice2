/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { FundMe, FundMeInterface } from "../../contracts/FundMe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "priceFeedAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FundMe__NotOwner",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "MINIMUM_USD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cheaperWithdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "fund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "funder",
        type: "address",
      },
    ],
    name: "getAddressToAmountFunded",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getFunder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceFeed",
    outputs: [
      {
        internalType: "contract AggregatorV3Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200198938038062001989833981810160405281019062000037919062000177565b620000536757f45fb3d3da145660c01b6200010a60201b60201c565b6200006f6791cbfcbc6e63d76960c01b6200010a60201b60201c565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050620000c2671e0d2bcfa4ccbd0760c01b6200010a60201b60201c565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001a9565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200013f8262000112565b9050919050565b620001518162000132565b81146200015d57600080fd5b50565b600081519050620001718162000146565b92915050565b60006020828403121562000190576200018f6200010d565b5b6000620001a08482850162000160565b91505092915050565b60805160601c6117b3620001d6600039600081816104b301528181610892015261096e01526117b36000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610185578063b60d4288146101b0578063be2693f0146101ba578063d7b4750c146101c4576100a2565b80630343fb25146100e85780633ccfd60b146101255780636b69a5921461012f578063893d20e81461015a576100a2565b366100a257610098678c8ab44d784e51f060c01b610201565b6100a0610204565b005b6100b6676dbd435a7cd5e8b060c01b610201565b6100ca670d4fa3f5d95a46f760c01b610201565b6100de6772a892b44dc40a4f60c01b610201565b6100e6610204565b005b3480156100f457600080fd5b5061010f600480360381019061010a91906110eb565b6103dd565b60405161011c9190611131565b60405180910390f35b61012d610461565b005b34801561013b57600080fd5b50610144610845565b6040516101519190611131565b60405180910390f35b34801561016657600080fd5b5061016f610852565b60405161017c919061115b565b60405180910390f35b34801561019157600080fd5b5061019a6108b6565b6040516101a791906111d5565b60405180910390f35b6101b8610204565b005b6101c261091c565b005b3480156101d057600080fd5b506101eb60048036038101906101e6919061121c565b610d8c565b6040516101f8919061115b565b60405180910390f35b50565b6102186774f74f25d4aecedc60c01b610201565b61022c67f8aa7e3504b1159260c01b610201565b61024067ed9ba488aa0165b160c01b610201565b6102536644d978c9c517f260c01b610201565b6802b5e3af16b1880000610292600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1634610e1090919063ffffffff16565b10156102d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ca906112a6565b60405180910390fd5b6102e7678e78be3158ec326760c01b610201565b6102fb6798764af4d858b4df60c01b610201565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461034991906112f5565b92505081905550610364676f95bb52c2907f7e60c01b610201565b61037867f4360616f941955460c01b610201565b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006103f36754f45592c6b83aeb60c01b610201565b610407677a322838422ff71c60c01b610201565b61041b670997206310ce1c7f60c01b610201565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61047567f455eecb9b59ac1560c01b610201565b61048967dd78b846229d2f2c60c01b610201565b61049d67b9f468dcd2e72c2660c01b610201565b6104b167835a8b7fcde5936460c01b610201565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461054a5761051867b28ac5ba76ceb80a60c01b610201565b6040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61055e6779b5a0620fb8468960c01b610201565b6105726759fe04bc4b226c0460c01b610201565b6105866783a2ceb69707f35b60c01b610201565b61059a67bcd48678dd755fea60c01b610201565b6105ae6765cc6005abfbb3c760c01b610201565b6105c267e7a9f629c6938f1960c01b610201565b60005b6001805490508110156106a9576105e6676746a7c09ad777d760c01b610201565b6105fa678f81078f7ce3e0f760c01b610201565b6000600182815481106106105761060f61134b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905061065167f361363feb82a92660c01b610201565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806106a19061137a565b9150506105c5565b506106be6751636798d9232db360c01b610201565b600067ffffffffffffffff8111156106d9576106d86113c3565b5b6040519080825280602002602001820160405280156107075781602001602082028036833780820191505090505b506001908051906020019061071d929190610fe1565b506107326706c339f7af9b5bb660c01b610201565b61074667d6fb26b86119500760c01b610201565b60003373ffffffffffffffffffffffffffffffffffffffff164760405161076c90611423565b60006040518083038185875af1925050503d80600081146107a9576040519150601f19603f3d011682016040523d82523d6000602084013e6107ae565b606091505b505090506107c6676bd3d8f8c917882c60c01b610201565b6107da67934c62fdde43b54860c01b610201565b6107ee67449ebfba33e2d20260c01b610201565b8061082e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082590611484565b60405180910390fd5b61084267f096a4731cb1a47760c01b610201565b50565b6802b5e3af16b188000081565b60006108686755a53a9089eb033060c01b610201565b61087c670747210dfc0e370360c01b610201565b6108906736113f4ecd59d25860c01b610201565b7f0000000000000000000000000000000000000000000000000000000000000000905090565b60006108cc678f2a313c49504ba360c01b610201565b6108e067a7e9e6759256625f60c01b610201565b6108f4676c26ffabd010892c60c01b610201565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6109306734d40a78c67fb8e260c01b610201565b61094467dd78b846229d2f2c60c01b610201565b61095867b9f468dcd2e72c2660c01b610201565b61096c67835a8b7fcde5936460c01b610201565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a05576109d367b28ac5ba76ceb80a60c01b610201565b6040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a196779b5a0620fb8468960c01b610201565b610a2d6759fe04bc4b226c0460c01b610201565b610a41671b768b026942cca260c01b610201565b610a5567a036e7b8cbcc63ff60c01b610201565b610a69679a73fd8ed86e21f360c01b610201565b610a7d67809bd8ec7df66f5a60c01b610201565b60006001805480602002602001604051908101604052809291908181526020018280548015610b0157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610ab7575b50505050509050610b1c67300659c366da99bc60c01b610201565b610b30675abb66f93c86b68760c01b610201565b60005b8151811015610bef57610b50671dac2ce14f5f69ff60c01b610201565b610b6467c38815723afb954260c01b610201565b6000828281518110610b7957610b7861134b565b5b60200260200101519050610b9767e94348d9200d2d8460c01b610201565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550508080610be79061137a565b915050610b33565b50610c0467229537f47964ce1f60c01b610201565b600067ffffffffffffffff811115610c1f57610c1e6113c3565b5b604051908082528060200260200182016040528015610c4d5781602001602082028036833780820191505090505b5060019080519060200190610c63929190610fe1565b50610c78670b957e83ff0fd65060c01b610201565b610c8c67f08dcf3ea09798b460c01b610201565b60003373ffffffffffffffffffffffffffffffffffffffff1647604051610cb290611423565b60006040518083038185875af1925050503d8060008114610cef576040519150601f19603f3d011682016040523d82523d6000602084013e610cf4565b606091505b50509050610d0c6722dedf04c8ba7dd360c01b610201565b610d2067132a7e10b230a19660c01b610201565b610d34674d30335e4af1566760c01b610201565b80610d74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d6b90611484565b60405180910390fd5b610d88678c01946c605d611f60c01b610201565b5050565b6000610da267ef8470965cced5fd60c01b610201565b610db667d83e2e2960cba8fc60c01b610201565b610dca679a80a54c7343b8ed60c01b610201565b60018281548110610dde57610ddd61134b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610e2667b21e092e590597e460c01b610ed9565b610e3a67e859745c6de2fbba60c01b610ed9565b610e4e67126559d6f717a66260c01b610ed9565b6000610e5983610edc565b9050610e6f67af12d654bb4ed19a60c01b610ed9565b610e836723161f746b0abf4160c01b610ed9565b6000670de0b6b3a76400008583610e9a91906114a4565b610ea4919061152d565b9050610eba67184ecef3b4e9a4d360c01b610ed9565b610ece6793a0b7028a03c81960c01b610ed9565b809250505092915050565b50565b6000610ef2670114804e7a996b9360c01b610ed9565b610f0667e2e919808592898360c01b610ed9565b610f1a67398275238d0e3ef460c01b610ed9565b60008273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610f6257600080fd5b505afa158015610f76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f9a91906115eb565b505050915050610fb4673f00530b5f58a8d360c01b610ed9565b610fc867c96ec3f351194f1060c01b610ed9565b6402540be40081610fd99190611666565b915050919050565b82805482825590600052602060002090810192821561105a579160200282015b828111156110595782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611001565b5b509050611067919061106b565b5090565b5b8082111561108457600081600090555060010161106c565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110b88261108d565b9050919050565b6110c8816110ad565b81146110d357600080fd5b50565b6000813590506110e5816110bf565b92915050565b60006020828403121561110157611100611088565b5b600061110f848285016110d6565b91505092915050565b6000819050919050565b61112b81611118565b82525050565b60006020820190506111466000830184611122565b92915050565b611155816110ad565b82525050565b6000602082019050611170600083018461114c565b92915050565b6000819050919050565b600061119b6111966111918461108d565b611176565b61108d565b9050919050565b60006111ad82611180565b9050919050565b60006111bf826111a2565b9050919050565b6111cf816111b4565b82525050565b60006020820190506111ea60008301846111c6565b92915050565b6111f981611118565b811461120457600080fd5b50565b600081359050611216816111f0565b92915050565b60006020828403121561123257611231611088565b5b600061124084828501611207565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000611290601b83611249565b915061129b8261125a565b602082019050919050565b600060208201905081810360008301526112bf81611283565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061130082611118565b915061130b83611118565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156113405761133f6112c6565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061138582611118565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156113b8576113b76112c6565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b600061140d6000836113f2565b9150611418826113fd565b600082019050919050565b600061142e82611400565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b600061146e600b83611249565b915061147982611438565b602082019050919050565b6000602082019050818103600083015261149d81611461565b9050919050565b60006114af82611118565b91506114ba83611118565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156114f3576114f26112c6565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061153882611118565b915061154383611118565b925082611553576115526114fe565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61157d8161155e565b811461158857600080fd5b50565b60008151905061159a81611574565b92915050565b6000819050919050565b6115b3816115a0565b81146115be57600080fd5b50565b6000815190506115d0816115aa565b92915050565b6000815190506115e5816111f0565b92915050565b600080600080600060a0868803121561160757611606611088565b5b60006116158882890161158b565b9550506020611626888289016115c1565b9450506040611637888289016115d6565b9350506060611648888289016115d6565b92505060806116598882890161158b565b9150509295509295909350565b6000611671826115a0565b915061167c836115a0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156116bb576116ba6112c6565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156116f8576116f76112c6565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615611735576117346112c6565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615611772576117716112c6565b5b82820290509291505056fea26469706673582212209c5dede9716ada9fcd107b206e02857b522bf3a173249db747815891c236546f64736f6c63430008080033";

type FundMeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FundMeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FundMe__factory extends ContractFactory {
  constructor(...args: FundMeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    priceFeedAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(priceFeedAddress, overrides || {});
  }
  override deploy(
    priceFeedAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(priceFeedAddress, overrides || {}) as Promise<
      FundMe & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): FundMe__factory {
    return super.connect(runner) as FundMe__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FundMeInterface {
    return new Interface(_abi) as FundMeInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FundMe {
    return new Contract(address, _abi, runner) as unknown as FundMe;
  }
}
